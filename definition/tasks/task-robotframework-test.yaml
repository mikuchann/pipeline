apiVersion: devops.alauda.io/v1alpha1
kind: PipelineTaskTemplate
metadata:
  name: RobotFrameworkTest
  annotations:
    alauda.io/displayName.zh-CN: RobotFramework 测试
    alauda.io/displayName.en: RobotFramework Test
    alauda.io/description.zh-CN: RobotFramework 测试
    alauda.io/description.en: RobotFramework Test
    alauda.io/readme.zh-CN: RobotFramework 测试
    alauda.io/readme.en: RobotFramework Test
    alauda.io/version: "0.0.2"
    alauda.io/style.icon: ""
  labels:
    category: Test
spec:
  engine: gotpl
  body: |+
    script {
      container('robotframework'){
        sh 'robot {{.testDir}}'
        def testpath = currentBuild.fullProjectName + '/' + currentBuild.number
        sh 'curl  -Ffile=@./report.html' + ' "http://${REPORT_SERVER}:${REPORT_SERVER_PORT}/upload?token=${REPORT_SERVER_TOKEN}&path=' + testpath + '"'
        sh 'curl  -Ffile=@./log.html' + ' "http://${REPORT_SERVER}:${REPORT_SERVER_PORT}/upload?token=${REPORT_SERVER_TOKEN}&path=' + testpath + '"'
        sh 'curl  -Ffile=@./output.xml' + ' "http://${REPORT_SERVER}:${REPORT_SERVER_PORT}/upload?token=${REPORT_SERVER_TOKEN}&path=' + testpath + '"'
        echo 'test report link is below:\n' + "http://${REPORT_SERVER}:${REPORT_SERVER_WEB_PORT}/" + testpath + '/report.html'
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false,
          reportDir: './', reportFiles: 'report.html', reportName: 'RobotFramework Report', reportTitles: 'RobotFramework Report'])
      }
    }
  arguments:
    - name: "testDir"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "测试目录"
          en: "Test dir"
        description:
          zh-CN: "测试目录"
          en: "Test dir"
      required: true
      default: ''
