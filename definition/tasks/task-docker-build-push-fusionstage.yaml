apiVersion: devops.alauda.io/v1alpha1
kind: PipelineTaskTemplate
metadata:
  name: build-docker-fusionstage
  annotations:
    alauda.io/displayName.zh-CN: "Docker 构建并上传镜像到 fusionstage"
    alauda.io/displayName.en: "Docker Build with fusionstage"
    alauda.io/description.zh-CN: "Docker 构建并上传镜像到 fusionstage"
    alauda.io/description.en: "Docker Build with fusionstage"
    alauda.io/readme.zh-CN: "Docker 构建并上传镜像到 fusionstage"
    alauda.io/readme.en: "Docker Build with fusionstage"
    alauda.io/version: "0.0.1"
    alauda.io/style.icon: ""
  labels:
    category: CI
spec:
  engine: gotpl
  body: |+
    script {
        def retryCount = {{ if .retry }}{{ .retry }}{{else}}0{{end}}
        def repositoryAddr = '{{.imageRepository}}:{{.imageTag}}'.replace("http://","").replace("https://","")
        def pushImageAPI = '{{.remoteImageAPI}}'
        def authJSON = '{"auth": {"identidy": {"methods": "password", "password": {"user": {"name": "{{.imageAuthName}}", "password": "{{.imageAuthPassword}}", "domain": {"name": "{{.imageAuthName}}"}}}}, "scope": {"domain": {"name": "{{.imageAuthName}}"}}}}'
        env.IMAGE_REPO = repositoryAddr
        env.IMAGE_API = pushImageAPI
        env.AUTH_JSON = authJSON

        dir(RELATIVE_DIRECTORY) {

        try{
              container('tools'){
                  retry(retryCount) {
                        sh """
                            docker build -t ${IMAGE_REPO} -f {{.dockerfile}} {{.buildArguments}} {{ if .context }}{{.context}}{{else}}.{{end}}
                            docker save ${IMAGE_REPO} | gzip > image.tar.gz
                            token=$(curl -i -k -H 'Accept:application/json' -H 'Content-Type:application/json;charset=utf8' -X POST -d ${AUTH_JSON} {{.imageAuthAPI}} | grep Token | awk '{print $2}')
                            curl -k -XPUT -H "X-Auth-Token: $token" -H "Content-Type: multipart/form-data" -F "file=@image.tar.gz" "${IMAGE_API}"
                        """
                  }
              }
           }catch(Exception err){
                {{if .EnableJira -}}
                def testIssue = [fields: [
                   project: [key: '{{.projectKey}}'],
                   summary: '{{.summary}}',
                   description: '{{.description}}',
                   issuetype: [id: '10004']]]

                response = jiraNewIssue issue: testIssue,site: env.JIRA_SITE
                echo response.data.toString()
                {{- end}}

                throw err
            }
        }
    }
  arguments:
    - name: "imageRepository"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像仓库"
          en: "Dockerfile"
        description:
          zh-CN: "格式：host:port/imagename"
          en: "host:port/image"
      required: true
      default: ''
    - name: "imageTag"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像 tag"
          en: "imageTag"
        description:
          zh-CN: "镜像 tag"
          en: "image tag"
      required: true
      default: 'latest'
    - name: "remoteImageAPI"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像上传接口"
          en: "remoteImageAPI"
        description:
          zh-CN: "镜像上传接口，如: https://0.0.0.0:1234/api"
          en: ""
      required: true
      default: ''
    - name: "imageAuthAPI"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像鉴权接口"
          en: "imageAuthAPI"
        description:
          zh-CN: "镜像鉴权接口，如: https://0.0.0.0:1234/api"
          en: ""
      required: true
      default: ''
    - name: "imageAuthName"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像鉴权用户名"
          en: "imageAuthName"
        description:
          zh-CN: "镜像鉴权用户名"
          en: ""
      required: true
      default: ''
    - name: "imageAuthPassword"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像鉴权密码"
          en: "imageAuthPassword"
        description:
          zh-CN: "镜像鉴权密码"
          en: ""
      required: true
      default: ''
    - name: "dockerfile"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "Dockerfile"
          en: "Dockerfile"
        description:
          zh-CN: "Dockerfile 在代码仓库中的绝对路径"
          en: ""
      required: true
      default: 'Dockerfile'
    - name: "context"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "构建上下文"
          en: "Build Context"
        description:
          zh-CN: "构建过程可以引用上下文中的任何文件。例如，构建中可以使用 COPY 命令在上下文中引用文件"
          en: "The build process can refer to any of the files in the context. For example, your build can use a COPY instruction to reference a file in the context"
      required: false
      default: '.'
    - name: "buildArguments"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "构建参数"
          en: "Build Arguments"
        description:
          zh-CN: "自定义更多的构建参数，对镜像构建进行更详细的配置"
          en: ""
      required: false
      default: ''
    - name: "retry"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "重试次数"
          en: "Retry Times"
        description:
          zh-CN: "生成镜像时的失败重试次数"
          en: ""
      required: false
      default: '3'


    - name: "EnableJira"
      schema:
        type: boolean
      required: false
      display:
        type: boolean
        name:
          zh-CN: "创建JIRA Issue"
          en: "Create JIRA Issue"
        description:
          zh-CN: "创建JIRA Issue"
          en: "Create JIRA Issue"


    - name: "projectKey"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "项目关键字"
          en: "projectKey"
        description:
          zh-CN: "项目关键字"
          en: ""
      required: true
      default: ''
    - name: "description"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "描述"
          en: "description"
        description:
          zh-CN: "描述"
          en: ""
      required: true
      default: ''
    - name: "summary"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "标题"
          en: "summary"
        description:
          zh-CN: "标题"
          en: ""
      required: true
      default: ''
  dependencies:
    plugins:
      - name: workflow-basic-steps
        version: "2.9"
      - name: docker-workflow
        version: "1.17"